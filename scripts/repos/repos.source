#!/bin/bash

repo() {
    repo_base=$(realpath ~/repos)
    repo_path=$(find "$repo_base" -mindepth 2 -maxdepth 2 -type d -iname "*$1*" | head -n 1)
    if ! test "$1" || ! test "$repo_path"; then
        error "Repo not found, going to repo base path"
        cd "$repo_base"
    else
        success "Found $repo_path"
        cd "$repo_path"
    fi
}

forrepos() {
    for d in $(find ~/repos -mindepth 2 -maxdepth 2 ! -path . -type d); do
        pushd $d > /dev/null
        re=$(basename $d)
        info $re
        eval "$@"
        popd > /dev/null
    done
}

gohome() { 
    gohome_temp_branch=$(git branch --show-current)
    git switch ${1-master}
    git pull
    git branch -D "${gohome_temp_branch}"
    unset gohome_temp_branch
}

killorig() {
    for f in $(git ls-files --others --exclude-standard | grep .*\.orig); do
        if rm $f; then
            success "Deleted $f"
        else
            error "Failed to delete $f"
        fi
    done
}

repoexists() {
    repo_base=$(realpath ~/repos)
    repo_path=$(find "$repo_base" -mindepth 2 -maxdepth 2 -type d -iname "$1" | head -n 1 )
    if ! test "$repo_path"; then
        error "Repo $1 not found"
        return 1
    fi
}